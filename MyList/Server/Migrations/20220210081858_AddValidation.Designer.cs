// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyList.Server.Data;

namespace MyList.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220210081858_AddValidation")]
    partial class AddValidation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MyList.Shared.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateMeasurment")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateMontage")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Sum")
                        .HasColumnType("int");

                    b.Property<string>("WorkersName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Addresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateMeasurment = new DateTime(2022, 2, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            DateMontage = new DateTime(2022, 2, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            Name = "str. Nova 99",
                            Sum = 11500,
                            WorkersName = "Александр"
                        },
                        new
                        {
                            Id = 2,
                            DateMeasurment = new DateTime(2022, 2, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            DateMontage = new DateTime(2022, 2, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            Name = "str. Dobor 1",
                            Sum = 9300,
                            WorkersName = "Броня"
                        },
                        new
                        {
                            Id = 3,
                            DateMeasurment = new DateTime(2022, 2, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            DateMontage = new DateTime(2022, 2, 10, 0, 0, 0, 0, DateTimeKind.Local),
                            Name = "str. Znaniya 12",
                            Sum = 8200,
                            WorkersName = "Дима"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
