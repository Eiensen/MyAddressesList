@page "/addresses"

@inject NavigationManager NavigationManager
@inject IAddressService AddressService

<h3>Мои адреса</h3>

@if (AddressService.Addresses == null || AddressService.Addresses.Count == 0)
{
    <span>Загрузка данных...</span>
}
else
{
    <table class="table" style="font-size:small">
        <thead>
            <tr>
                <th>Замер</th>
                <th>Монтаж</th>
                <th>Адрес</th>
                <th>Сумма</th>
                <th>Бригада</th>
                <th></th>
            </tr>
        </thead>
        <tbody>

            @foreach (var addres in AddressService.Addresses)
            {
                <tr>
                    <td>@addres.DateMeasurment.ToString("dd/MM")</td>
                    <td>@addres.DateMontage.ToString("dd/MM")</td>
                    <td><b>@addres.Name</b></td>
                    <td>@addres.Sum</td>
                    <td>@addres.WorkersName</td>
                    <td>
                        <button type="button" class="btn btn-link" style="font-size:small" @onclick="@(()=>DeleteAddress(addres.Id))">Delete</button>
                    </td>
                </tr>
            }



        </tbody>
    </table>
}
<br />
<button type="button" class="btn btn-primary form-control" @onclick="AddNewAddress"><b>+</b></button>



@code {
    protected override async Task OnInitializedAsync()
    {
        await LoadAddresses();
    }

    private async Task DeleteAddress(int id)
    {
        await AddressService.DeleteAddress(id);

        await LoadAddresses();
    }

    private void AddNewAddress()
    {
        NavigationManager.NavigateTo("/addaddress");
    }

    private async Task LoadAddresses()
    {
        await AddressService.GetAddresses();
    }
}
